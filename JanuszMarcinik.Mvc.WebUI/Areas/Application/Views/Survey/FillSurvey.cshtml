@model JanuszMarcinik.Mvc.WebUI.Areas.Application.Models.Survey.SurveyViewModel

@{
    ViewBag.Title = "Ankieta";
}

@using (var form = Html.Bootstrap().Begin(new Form()))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Interviewee.IntervieweeId)
    @Html.HiddenFor(x => x.Questionnaire.Name)
    @Html.HiddenFor(x => x.Questionnaire.QuestionnaireId)
    @Html.HiddenFor(x => x.Questionnaire.OrderNumber)
    @Html.HiddenFor(x => x.QuestionnairesCount)

    <br />

    using (var panel = Html.Bootstrap().Begin(new Panel().Style(TwitterBootstrapMVC.Infrastructure.Enums.PanelStyle.Primary)))
    {
        @panel.Heading("Informacje podstawowe")

        using (panel.BeginBody())
        {
            <div class="col-sm-4">
                @form.FormGroup().DropDownListFor(x => x.Interviewee.SexId, Model.Interviewee.Sexes).OptionLabel("Wybierz")
            </div>
            <div class="col-sm-4">
                @form.FormGroup().DropDownListFor(x => x.Interviewee.SeniorityId, Model.Interviewee.Seniorities).OptionLabel("Wybierz")
            </div>
            <div class="col-sm-4">
                @form.FormGroup().DropDownListFor(x => x.Interviewee.PlaceOfResidenceId, Model.Interviewee.PlacesOfResidence).OptionLabel("Wybierz")
            </div>
        }
    }

    @Html.Bootstrap().ValidationSummary()

    using (var panel = Html.Bootstrap().Begin(new Panel().Style(TwitterBootstrapMVC.Infrastructure.Enums.PanelStyle.Primary)))
    {
        @panel.Heading(string.Format("{0}. {1}", Model.Questionnaire.OrderNumber, Model.Questionnaire.Name))

        using (panel.BeginBody())
        {
            for (int questionIndex = 0; questionIndex < Model.Questionnaire.Questions.Count(); questionIndex++)
            {
                <p><strong>@string.Format("{0}. {1}", questionIndex + 1, Model.Questionnaire.Questions[questionIndex].Text)</strong></p>

                @Html.HiddenFor(x => x.Questionnaire.Questions[questionIndex].QuestionId)
                @Html.HiddenFor(x => x.Questionnaire.Questions[questionIndex].Text)

                @(Html.Bootstrap()
                        .RadioButtonListFor(m => m.Questionnaire.Questions[questionIndex].AnswerId,
                            m => m.Questionnaire.Questions[questionIndex].Answers,
                            answer => answer.Value, answer => answer.Text).AsButtonGroup(ButtonStyle.Default).ContainerClass("btn-group-justified"))

                var answersCount = Model.Questionnaire.Questions[questionIndex].Answers.Count();
                var widthPercentage = (int)(100 / answersCount) - 1;

                for (int i = 0; i < Model.Questionnaire.Questions[questionIndex].Answers.Count(); i++)
                {
                    if (i % 2 == 0)
                    {
                        <label class="text-center" style="width: @(widthPercentage + 1)%; font-weight: normal;">
                            @Model.Questionnaire.Questions[questionIndex].Answers[i].Description
                        </label>
                    }
                    else
                    {
                        <label class="text-center" style="width: @widthPercentage%; font-weight: normal;">
                            @Model.Questionnaire.Questions[questionIndex].Answers[i].Description
                        </label>
                    }
                }
                <br /><br />
            }
        }

        using (panel.BeginFooter())
        {
            if (Model.Questionnaire.OrderNumber < Model.QuestionnairesCount)
            {
                @Html.Bootstrap().SubmitButton().Text("Przejdź do następnej ankiety").PrependIcon(FontAwesome.arrow_right).Style(ButtonStyle.Primary)
            }
            else
            {
                @Html.Bootstrap().SubmitButton().Text("Zapisz wyniki").PrependIcon(FontAwesome.save).Style(ButtonStyle.Success)
            }
        }
    }
}

<script type="text/javascript">

    $(document).ready(function ()
    {
        var selectedValues = [];

        @foreach (var d in Model.SelectedValues)
        {
            @:selectedValues.push("@d");
        }

        for (i = 0; i < selectedValues.length; i++)
        {
            $("input[value='" + selectedValues[i] + "']").parent().addClass("active");
        }
    })

</script>